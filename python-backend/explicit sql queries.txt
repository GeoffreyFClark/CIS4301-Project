Query 1:

SELECT (COUNT(case when moves LIKE 'd4 d5 c4%' THEN 1 END)/Count(*))*100 as Popularity,YearGroup as Year
FROM (SELECT FLOOR(extract(year from EVENTDATE) / 2) * 2 as YearGroup, moves, EVENTDATE
FROM games2
WHERE eventdate BETWEEN TO_DATE('2000', 'YYYY') AND TO_DATE('2022','YYYY') AND turns BETWEEN 1 AND 200
) subquery
GROUP BY YearGroup
ORDER BY YearGroup;



Query 2: 
Generated by queryhelper.py




Query 3:
WITH UserSelectedGames AS (
SELECT * 
FROM GAMES2
WHERE WHITEELO >= 246 AND WHITEELO <= 3958
AND BLACKELO >= 246 AND BLACKELO <= 3958
AND TURNS >= 1 AND TURNS <= 201
AND EVENTDATE >= TO_DATE('01-JAN-1942', 'DD-MON-YYYY') AND EVENTDATE <= TO_DATE('01-JAN-2024', 'DD-MON-YYYY')
),
DifferenceData AS (
SELECT 
    ABS(WHITEELO - BLACKELO) AS Difference,
    SUBSTR(EVENTDATE, -2) AS Year,
    (SUM(CASE WHEN (RESULT = '0-1' AND WHITEELO < BLACKELO) OR (RESULT = '1-0' AND WHITEELO > BLACKELO) THEN 1 ELSE 0 END) / COUNT()) AS SampleProbability,
    (1/ (1 + POWER(10, -(ABS(WHITEELO - BLACKELO)/400)))) AS ExpectedProbability,
    COUNT() AS Occurrances
FROM UserSelectedGames
GROUP BY ABS(WHITEELO - BLACKELO), SUBSTR(EVENTDATE, -2)
),
YearTotals AS
(SELECT 
    Year,
    SUM(SampleProbability * Occurrances) / SUM(Occurrances) AS SampleYearProbability,
    SUM(ExpectedProbability * Occurrances) / SUM(Occurrances) AS ExpectedYearProbability,
    SUM(Occurrances) AS OccurrancesPerYear
FROM DifferenceData
GROUP BY Year
)
SELECT
    Year,
    ROUND((SampleYearProbability / ExpectedYearProbability), 3) AS SampleOverExpected
FROM YearTotals
WHERE OccurrancesPerYear >= 250
Order BY Year DESC;



Query 4:
